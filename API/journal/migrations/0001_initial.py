# Generated by Django 4.1.5 on 2023-01-25 17:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dish_name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('location', models.CharField(max_length=100)),
                ('meal_name', models.CharField(max_length=50)),
                ('category_name', models.CharField(max_length=50)),
                ('serving_size', models.CharField(max_length=50)),
                ('calories', models.IntegerField()),
                ('calories_from_fat', models.IntegerField(default=0)),
                ('total_fat', models.FloatField(default=0)),
                ('sat_fat', models.FloatField(default=0)),
                ('trans_fat', models.FloatField(default=0)),
                ('cholesterol', models.FloatField(default=0)),
                ('sodium', models.FloatField(default=0)),
                ('total_carb', models.FloatField(default=0)),
                ('dietary_fiber', models.FloatField(default=0)),
                ('sugars', models.FloatField(default=0)),
                ('protein', models.FloatField(default=0)),
                ('ingredient_list', models.TextField()),
                ('allergens', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('calorie_goal', models.IntegerField()),
                ('calories', models.IntegerField()),
                ('calories_from_fat', models.IntegerField()),
                ('total_fat', models.FloatField()),
                ('sat_fat', models.FloatField()),
                ('trans_fat', models.FloatField()),
                ('cholesterol', models.FloatField()),
                ('sodium', models.FloatField()),
                ('total_carb', models.FloatField()),
                ('dietary_fiber', models.FloatField()),
                ('sugars', models.FloatField()),
                ('protein', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('height', models.IntegerField()),
                ('lbs_per_week', models.FloatField()),
                ('calorie_goal', models.IntegerField(default=2000)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Journal_Dish_Intermediary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journal.dish')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journal.journal')),
            ],
        ),
        migrations.AddField(
            model_name='journal',
            name='dishes',
            field=models.ManyToManyField(through='journal.Journal_Dish_Intermediary', to='journal.dish'),
        ),
        migrations.AddField(
            model_name='journal',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
